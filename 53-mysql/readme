tee /Users/walkerking/test/blunderbuss/53-mysql/log.sql 可以将sql及其执行结果输出到一个文件中
> 选库语句
```
use 库名;
```
如果不知道有哪些库，可以用
```
show databases;
```
当选过库之后，面对表
查看库下面所有的表
```
show tables;
```
创建数据库
```
create database 数据库名 [charset utf8]
```
删除数据库
```
drop database 数据库名;
```
数据库改名
mysql中，表/列可以改名，database不能改名

> 表
建表
```
create 
```
删除表
```
drop table 表名;
```
改表名
```
rename table admin_user to admin;
```
增加表数据
```
insert into 

```
清空表数据
```
truncate 表名;
```
truncate 与 delete的区别:
truncate 是删除一个表再重建,操作之后获得一张全新的表，delete 是从删除所有数据层面上操作，删除之后自增索引的影响还在，如果决定全清空，truncate速度更快.

查看表结构
```
desc admin_user;
```
插入行（那张表，哪些列，哪些值）
```
insert into admin_user ( user_name, password) values ( 'abc', '123456')
```
字段要严格对应
插入多行
```
insert into admin_user (user_name, password) values ('ab', '123ab'), ('ac', '123ac'), ('bc', '123bc');
```
插入所有列
如果插入所有列，可以不声明待插入列，即，如果不声明插入的列，则理解依次插入所有列。
```
insert into admin_user values (null, '', )
# 列与值必须一一对应
```
修改行（哪张表，哪些列，哪些值，哪些行生效）
```
update 表名 set 列1 = 新值1, 列2 = 新值2 where id = ?
# where后面跟表达式，如果表达式为真，则语句生效
```
# 删除行
```
delete from 表名 where expression;
```
> 建表
建表的主要知识点是列类型
存储同样的数据，不同的列类型，所占据的空间和效率是不一样的，这就是列类型的意义。
mysql三个列类型
数值型
注意：某些mysql版本在建表时不能使用引号，单引号、双引号都不行，使用反引号没有问题。
- 整型
alter table class add age1 tiny(M)
M必须跟zerofill配合才有意义，zerofill同时必是unsigned类型
	- Tinyint
		占据空间：一个字节
		春促范围：-128 —— 127，0 —— 255
- 浮点型/定点型
浮点数占的空间：10^38.10^-38，如果M <= 24 占四个字节，否则占8个字节
用来表示数据中的小数，除了float----浮点，还有一种叫定点decimal，定点是把整数部分和小数部分分开存储的，比float精确
银行存款使用的是整型，单位是分。
- 字符串
char varchar text blob
char(4) 定长字符串
varchar 变长字符串
对于char(N)，不够N个长度，用空格在末尾补至N个长度，取出时再将右侧的空格删除，所以如果原字符串末尾有空格，则会丢失。
varchar(100)，也是存储0-100个字符
varchar(N)，不用空格补齐，但列内容前，有1-2个字节来标示该列的内容长度。
注意：char(M) varchar(M)中的M都是限定的字符数，不是字节数。
- text
文本类型，可以存比较大的文本段，搜索速度稍慢，因此，如果不是特别大的内容，建议用char、varchar来代替
Text 不用加默认值（加了也没用）
- blob
二进制类型，用来存储图像、音频等二进制信息
意义：2进制 0-255 都有可能出现，blob在于防止因为字符集的问题，导致信息丢失。
比如：一张图中有0xFF字节，这个在ascii字符集认为非法，在入库的时候被过滤了





